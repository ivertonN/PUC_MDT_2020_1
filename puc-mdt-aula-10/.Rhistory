library(tidyverse)
library(tidygraph)
library(igraph)
library(geosphere)
# Flights / map geosphere
df_airports <- read_csv("data_sb/Dataset3-Airlines-NODES.csv")
df_flights <- read_csv("data_sb/Dataset3-Airlines-EDGES.csv")
# Selecionar apenas os aeroportos que possuem mais de 10 conexÃµes no mapa.
big_id <- df_flights %>%
count(Source, sort = T) %>%
filter(n > 10) %>%
pull(Source)
df_airports <- df_airports %>%
filter(df_airports$ID %in% big_id)
df_flights  <- df_flights %>%
filter(df_flights$Source %in% big_id &
df_flights$Target %in% big_id)
source('~/GitHub/puc-mdt-aula-10/aux0/prep_airports.R', encoding = 'UTF-8', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(geosphere)
library(leaflet)
library(tidygraph)
library(igraph)
df_airports_grouped <- read_rds("data_sb/df_airports_grouped.rds")
df_flights_grouped <- read_rds("data_sb/df_flights_grouped.rds")
#Paleta de cores utilizada para parametro group
group_pal <- colorFactor(
palette = "Set1",
domain = df_airports_grouped$group
)
map_flights <-
leaflet( options = leafletOptions( minZoom = 1) ) %>%
setMaxBounds( lng1 = -180
, lat1 = -89.98155760646617
, lng2 = 180
, lat2 = 89.99346179538875 ) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addPolygons(data = maps::map("usa", plot = F), fillColor = "blue",
opacity = .1)
#Paleta de cores utilizada para edge
col_1 <- adjustcolor("orange red", alpha=0.4)
col_2 <- adjustcolor("orange", alpha=0.4)
edge_pal <- colorRampPalette(c(col_1, col_2), alpha = TRUE)
edge_col <- edge_pal(100)
for(i in 1:nrow(df_flights_grouped))  {
edge_ind <- df_flights_grouped %>% pull(curved_line_color_ind) %>% `[[`(i)
curved_line <- df_flights_grouped %>% pull(curved_line) %>% `[[`(i)
#adiciona cada linha curva
map_flights <- addPolylines(map_flights, data = curved_line
, color = edge_col[edge_ind]
, weight = edge_ind/30
, opacity = 1)
}
for(i in 1:nrow(df_airports_grouped)) {
group_id <- df_airports_grouped %>% pull(group) %>% `[[`(i)
map_flights <-  addCircles(map_flights, data = df_airports_grouped[i,]
, lng = ~longitude
, lat = ~latitude
, group = as.character(group_id)
, color = ~group_pal(group_id)
, popup = str_glue("<b>Lat:</b> {df_airports_grouped[i,]$latitude} <br/>
<b>Lon:</b> {df_airports_grouped[i,]$longitude} <br/>
<b>Airport:</b> {df_airports_grouped[i,]$Label} <br/>")
, weight = ~sqrt(sqrt(centrality))*10
, opacity = .8
,highlightOptions = highlightOptions(color = "yellow", bringToFront = TRUE))
}
map_flights
library(tidyverse)
library(geosphere)
library(leaflet)
# Flights / map geosphere
df_airports_grouped <- read_rds("data_sb/df_airports_grouped.rds")
df_flights_grouped <- read_rds("data_sb/df_flights_grouped.rds")
#Paleta de cores utilizada para edge
col_1 <- adjustcolor("orange red", alpha=0.4)
col_2 <- adjustcolor("orange", alpha=0.4)
edge_pal <- colorRampPalette(c(col_1, col_2), alpha = TRUE)
edge_col <- edge_pal(100)
#Paleta de cores utilizada para parametro group
group_pal <- colorFactor(
palette = "Set1",
domain = df_airports_grouped$group
)
#pop up
pop <- str_glue("<b>Lat:</b> {df_airports_grouped$latitude} <br/>
<b>Lon:</b> {df_airports_grouped$longitude} <br/>
<b>Airport:</b> {df_airports_grouped$Label} <br/>")
map_flights <-
leaflet( options = leafletOptions( minZoom = 1) ) %>%
setMaxBounds( lng1 = -180
, lat1 = -89.98155760646617
, lng2 = 180
, lat2 = 89.99346179538875 ) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addPolygons(data = maps::map("usa", plot = F), fillColor = "blue",
opacity = .1)
group_uniques = df_airports_grouped %>% pull(group) %>% levels()
edge_ind <- df_flights_grouped %>% pull(curved_line_color_ind) %>% `[[`(1)
curved_line <- df_flights_grouped %>% pull(curved_line) %>% `[[`(1)
#adiciona cada linha curva
map_flights <- addPolylines(map_flights, data = curved_line
, color = edge_col[edge_ind]
, weight = edge_ind/30
, opacity = 1)
map_flights
group_id <- df_airports_grouped %>% pull(group) %>% `[[`(1)
map_flights <-  addCircles(map_flights, data = df_airports_grouped[1,]
, lng = ~longitude
, lat = ~latitude
, group = as.character(group_id)
, color = ~group_pal(group_id)
, popup = pop
, weight = ~centrality*2
, opacity = .8
,highlightOptions = highlightOptions(color = "yellow", bringToFront = TRUE))
map_flights
knitr::opts_chunk$set(echo = TRUE)
df_airports <- read_csv("data_sb/Dataset3-Airlines-NODES.csv")
df_flights <- read_csv("data_sb/Dataset3-Airlines-EDGES.csv")
df_airports
df_flights
df_flights %>%
semi_join(df_flights, by = c("Source" = "Target", "Target" = "Source"))
df_flights %>%
semi_join(df_flights, by = c("Source" = "Target", "Target" = "Source"))
df_flights
df_flights %>%
semi_join(df_flights, by = c("Source" = "Target", "Target" = "Source"))
library(tidyverse)
library(igraph)
library(tidygraph)
library(ggraph)
df_emails <- read_csv("data/email_edges.csv",col_types="iii")
gr_emails <- df_emails %>%
as_tbl_graph()
gr_emails
E(gr_emails)
gr_emails %>%
ggraph(layout = 'graphopt') +
geom_edge_link() +
geom_node_point(size = 5)
gr_emails %>%
ggraph(layout = 'fr') +
geom_edge_link(arrow = arrow(length = unit(3, 'mm')),
end_cap = circle(3, 'mm')) +
geom_node_point(size = 5)
df_emails_users <- read_csv("data/email_nodes.csv",
col_types="iccc")
df_emails_users
V(gr_emails)$name
df_lookup <- tibble(id=V(gr_emails)$name %>% as.integer) %>%
left_join(df_emails_users)
df_lookup
V(gr_emails)
V(gr_emails)$nome <- df_lookup$name
V(gr_emails)$sex <- df_lookup$sex
V(gr_emails)$cargo <- df_lookup$cargo
gr_emails %>%
ggraph(layout = 'fr') +
geom_edge_fan(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name)),
arrow = arrow(length = unit(4, 'mm'))) +
geom_node_point(aes(color=sex),size=10) +
geom_node_text(aes(label = nome)) +
theme(legend.position = "none")
gr_emails %>%
ggraph(layout = 'circle') +
geom_edge_fan(aes(label = emails),
strength=2,
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
arrow = arrow(length = unit(3, 'mm')),
end_cap = circle(8, 'mm')) +
geom_node_point(aes(color=sex),size=20) +
geom_node_text(aes(label = nome)) +
theme(legend.position = "none")
gr_emails %>%
ggraph(layout = 'circle') +
geom_edge_fan(aes(label = emails),
strength=2,
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
arrow = arrow(length = unit(3, 'mm')),
end_cap = circle(8, 'mm')) +
geom_node_point(aes(color=sex),size=20) +
geom_node_text(aes(label = str_c(nome,"\n",cargo))) +
theme(legend.position = "none")
gr_emails %>%
ggraph(layout = 'circle') +
geom_edge_fan(aes(edge_width=emails),
strength=2,
angle_calc = 'along',
label_dodge = unit(2.5, 'mm'),
arrow = arrow(length = unit(3, 'mm')),
end_cap = circle(8, 'mm')) +
geom_node_point(aes(color=sex),size=20) +
geom_node_text(aes(label = nome))
gr_emails_grouped <- gr_emails %>%
mutate(group = group_edge_betweenness() %>% as.factor,
centrality = centrality_betweenness())
V(gr_emails_grouped)$group
V(gr_emails_grouped)$centrality
gr_emails_grouped %>%
ggraph(layout="kk") +
geom_edge_link() +
geom_node_point(aes(color=group,size=centrality))
df_enron <- read_csv("data/email_enron2.csv", col_types = "iii")
df_enron
df_enron %>%
semi_join(df_enron,
by=c(from="to",to="from"))
gr_enron <- df_enron %>%
as_tbl_graph(directed=F)
gr_enron
gr_flights <- df_flights %>%
as_tbl_graph()
gr_flights
V(gr_flights)$name
V(gr_flights)$name <- df_airports$Label
V(gr_flights)$name
V(gr_flights)$name <- df_airports$Label
ggraph(layout = 'graphopt') +
geom_edge_link() +
geom_node_point(size = 5)
gr_flights %>%
ggraph(layout = 'graphopt') +
geom_edge_link() +
geom_node_point(size = 5)
big_id <- df_flights %>%
count(Source, sort = T) %>%
filter(n > 10) %>%
pull(Source)
df_airports <- df_airports %>%
filter(df_airports$ID %in% big_id)
df_flights  <- df_flights %>%
filter(df_flights$Source %in% big_id &
df_flights$Target %in% big_id)
big_id <- df_flights %>%
count(Source, sort = T) %>%
filter(n > 10) %>%
pull(Source)
df_airports <- df_airports %>%
filter(df_airports$ID %in% big_id)
df_flights  <- df_flights %>%
filter(df_flights$Source %in% big_id &
df_flights$Target %in% big_id)
gr_flights %>%
ggraph(layout = 'graphopt') +
geom_edge_link() +
geom_node_point(size = 5)
big_id <- df_flights %>%
count(Source, sort = T) %>%
filter(n > 10) %>%
pull(Source)
df_airports <- df_airports %>%
filter(df_airports$ID %in% big_id)
df_flights  <- df_flights %>%
filter(df_flights$Source %in% big_id &
df_flights$Target %in% big_id)
gr_flights <- df_flights %>%
as_tbl_graph()
V(gr_flights)$name <- df_airports$Label
gr_flights %>%
ggraph(layout = 'graphopt') +
geom_edge_link() +
geom_node_point(size = 5)
V(gr_flights)$name <- df_airports$Label
V(gr_flights)$name
df_airports$Label
knitr::opts_chunk$set(echo = TRUE)
df_airports <- read_csv("data_sb/Dataset3-Airlines-NODES.csv")
df_flights <- read_csv("data_sb/Dataset3-Airlines-EDGES.csv")
df_airports
df_flights
df_flights %>%
semi_join(df_flights, by = c("Source" = "Target", "Target" = "Source"))
big_id <- df_flights %>%
count(Source, sort = T) %>%
filter(n > 10) %>%
pull(Source)
df_airports <- df_airports %>%
filter(df_airports$ID %in% big_id)
df_flights  <- df_flights %>%
filter(df_flights$Source %in% big_id &
df_flights$Target %in% big_id)
df_flights
gr_flights <- df_flights %>%
as_tbl_graph()
V(gr_flights)$name <- df_airports$Label
V(gr_flights)$name
gr_flights %>%
ggraph(layout = 'graphopt') +
geom_edge_link() +
geom_node_point(size = 5)
gr_flights_grouped <- gr_flights %>%
mutate(group = group_fast_greedy() %>% as.factor,
centrality = centrality_betweenness())
gr_flights <- df_flights %>%
as_tbl_graph(direct = F)
V(gr_flights)$name <- df_airports$Label
gr_flights %>%
ggraph(layout = 'graphopt') +
geom_edge_link() +
geom_node_point(size = 5)
gr_flights_grouped <- gr_flights %>%
mutate(group = group_fast_greedy() %>% as.factor,
centrality = centrality_betweenness())
gr_flights_grouped
gr_flights_grouped_grouped %>%
ggraph(layout="kk") +
geom_edge_link() +
geom_node_point(aes(color=group,size=centrality))
gr_flights_grouped %>%
ggraph(layout="kk") +
geom_edge_link() +
geom_node_point(aes(color=group,size=centrality))
gr_flights_grouped %>%
ggraph(layout="fr") +
geom_edge_link() +
geom_node_point(aes(color=group,size=centrality))
